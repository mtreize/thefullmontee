-coffee_string=[]
-@game.players.count.times{coffee_string<<":coffee:"}
-coffee_str=coffee_string.join
.well.card
  -thanks=[]
  -many_coffee_desc=["délicieux cafés","petits cafés","sacrés cafés", "cafés merveilleux", "succulents cafés", "cafés inoubliables", "merveilles de cafés", " si bons cafés", "incroyables cafés" ]
  -@game.coffee_bills.each do |bill|
    -thanks << " à #{bill.player.name}"
  .row.justify-content-center
    .col-8.text-center.border.rounded.py-2.mt-2
      %b.lead
        -thanks_all="Merci#{thanks.to_sentence} pour ces #{@game.players.count} "+many_coffee_desc.sample+" !"
        =thanks_all
  .row.justify-content-center
    .col-8.text-center.text-muted
      Game Time :
      =@game.gametime
  //=@game.scores.count 
  //SCORES
  // -raise @curves.first.second.inspect
  %section
  
    %canvas#myChart2{:height => "250", :width => "400", :style=>"background-color:white;"}
    .fixed-height-chart.d-none{:style=>"border: 1px solid black;"}
      %canvas#myChart{:height=>"550", :width=> "1000", :style=>"background-color:white;"}
    
    .text-center
      %button#save-btn.btn.btn-danger{'data-disable-with' => fa_icon("spinner spin ").html_safe}
        =fa_icon "slack"
        Poster sur Slack
      %br/
      %br/
      
      =link_to "Afficher l'image", "/games_graphs/game_#{@game.id}.png", :class=>"btn btn-secondary"
      %br/
      %br/
      
      =link_to game_compute_results_path(@game), :class=>"btn btn-info" do
        =fa_icon "trophy"
        Recalculer les résultats et les trophées
      %br/
  // %table.table.table-striped
  //   %thead
  //     %tr
  //       %th Value
  //       %th Player
  //       %th Round

  //   %tbody
  //     - @game.scores.each do |score|
  //       %tr
  //         %td= score.value
  //         %td= score.player.name
  //         %td= score.round.number
  %section
    .card
      .card-header
        Trophées distribués sur cette partie
      %table.card-body.table.table-striped
        -@game.performances.each do |perf|
          %tr
            %td=link_to perf.player.name, perf.player
            %td
              =link_to perf.trophy do
                =fa_icon 'trophy'
                ="#{perf.trophy.name}"
  
  %section#black_verif.d-none.d-lg-block
    .text-center
      %button.btn.btn-sm.btn-dark{"aria-controls" => "collapseExample", "aria-expanded" => "false", "data-target" => "#collapseVerif", "data-toggle" => "collapse", :type => "button"}
        Afficher les vérifications
    %br
    #collapseVerif.collapse

      %p.text-center
        Vous vous en foutez, mais j'en ai besoin pour vérifier certaines choses.
        %br
        Désormais, beaucoup plus de choses sont stockées, pour pouvoir gérer plus efficacement les trophées.
      .card.bg-dark.text-white.border-dark
        .card-header.border-dark
          Vérification des calculs
        %table.card-body.table.table-striped.border-dark.table-dark.text-right
          %tr
            %td 
            %td 
              %small 
                round
                %br
                total_cumule
            -@game.rounds.order(:number).each do |r|
              %td=r.number
          -@game.players.each do |p|
            %tr
              %td=p.name
              %td.text-right
                %small.text-muted
                  = "0"
                %br
                0
              -@game.rounds.order(:number).each do |r|
                %td.text-right
                  -s=Score.where(:player=>p, :round=>r).first
                  %small.text-muted
                    = s.value>0 ? "+#{s.value}":s.value
                  %br
                  =s.tmp_total    
      %br
      .card.bg-dark.text-white.border-dark
        .card-header.border-dark
          Vérification des calculs des positions
        %table.card-body.table.table-striped.border-dark.table-dark.text-right
          %tr
            %td 
            %td 
              %small 
                round
                %br
                positions
            -@game.rounds.order(:number).each do |r|
              %td=r.number
          -@game.players.each do |p|
            %tr
              %td=p.name
              %td
                0
              -@game.rounds.order(:number).each do |r|
                %td
                  -s=Score.where(:player=>p, :round=>r).first
                  =s.tmp_ranking
                  
                  
                  
                  
                  
                  
                  
:javascript

  var ctx = document.getElementById("myChart").getContext('2d');
  var ctx2 = document.getElementById("myChart2").getContext('2d');
    
  var myChart = new Chart(ctx, { 
    type: 'line',
    data: #{@chart_data.to_json.html_safe},
    options: {
      layout: {
        padding: {
          left: 5,
          right: 20,
          top: 10,
          bottom: 20
        }
      },
      responsive: false,
      title:{
          display:true,
          text: "#{@game.title}",
          fontSize:16
      },
      legend: {
          display: true
      },
      elements: {
      },
      scales: {
        yAxes: [{
          ticks: {
            stepSize: 1,
            callback: function(value, index, values){
              if(value % 5 == 0){ 
                return value;
              }
              else{
                return "";
              }
            }
          },
          gridLines:{
            zeroLineColor: "#ffbbbb",
            zeroLineWidth: 2,
            borderDash:[5, 5],
            zeroLineBorderDash:[3, 3]
          }
        }]
      }
    }
  });    
  var myChart2 = new Chart(ctx2, { 
    type: 'line',
    data: #{@chart_data.to_json.html_safe},
    options: {
      layout: {
        padding: {
          left: 5,
          right: 20,
          top: 10,
          bottom: 20
        }
      },
      responsive: true,
      title:{
          display:true,
          text: "#{@game.title}",
          fontSize:16
      },
      legend: {
          display: true
      },
      elements: {
      },
      scales: {
        yAxes: [{
          ticks: {
            stepSize: 1,
            callback: function(value, index, values){
              if(value % 5 == 0){ 
                return value;
              }
              else{
                return "";
              }
            }
          },
          gridLines:{
            zeroLineColor: "#ffbbbb",
            zeroLineWidth: 2,
            borderDash:[5, 5],
            zeroLineBorderDash:[3, 3]
          }
        }]
      }
    }
  });
  Chart.plugins.register({
    beforeDraw: function(myChart) {
      var ctx = myChart.chart.ctx;
      ctx.fillStyle = "white";
      ctx.fillRect(0, 0, myChart.chart.width, myChart.chart.height);
    }
  });
    
    
  $("#myChart").get(0).toBlob(function(blob) { 
          var post_url="#{game_save_graph_path(@game)}";


          var blobBin = atob($("#myChart").get(0).toDataURL().split(',')[1]);
          var array = [];
          for(var i = 0; i < blobBin.length; i++) {
              array.push(blobBin.charCodeAt(i));
          }
          var file=new Blob([new Uint8Array(array)], {type: 'image/png'});


          var formdata = new FormData();
          formdata.append("myNewFileName", file);
          $.ajax({
             url: post_url,
             type: "POST",
             data: formdata,
             processData: false,
             contentType: false,
          });
          
  $("#save-btn").click(function() {
        



          var url = "https://hooks.slack.com/services/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"
          var text = "Game Recap"


          $.ajax({
              data: 'payload=' + JSON.stringify({
                    "attachments": [
                        {
                            "fallback": "Game Recap : https://thefullmontee.space/games_graphs/game_#{@game.id}.png",
                            "title": "#{@game.title}",
                            "title_link": "https://thefullmontee.space/games/#{@game.id}/recap",
                            // "title_link": "https://thefullmontee.space/games_graphs/game_#{@game.id}.png",
                            "text": "#{coffee_str} \n #{thanks_all}",
                            "unfurl_links": true,
                            "unfurl_media": true,
                            "image_url": "https://thefullmontee.space/games_graphs/game_#{@game.id}.png",
                            "color": "#764FA5"
                        }
                    ]
              }),
              dataType: 'json',
              processData: false,
              type: 'POST',
              url: url
          }).done(function(respond){
            alert("Ca devrait être bon");
          });

          // saveAs(blob, "#{@game.title}.png");
      });
  });
